// ****************** ExceptionGeneratorW32.cpp *************************
// Generated by TE140x-TargetForMatlabSimulink  2.3.1.1
// MATLAB 9.11.0.1837725 (R2021b) Update 2 (win64)
// TwinCAT 3.1.4024.0
// TwinCAT Target 2.3.1.1
// Beckhoff Automation GmbH & Co. KG     (www.beckhoff.com)
// *************************************************************
#include "TcPch.h"
#pragma hdrstop

#include "ExceptionGeneratorCtrl.h"
#include "TcSysW32_i.c"

CComModule _Module;

const   CLSID   IID_ExceptionGeneratorCtrl		=  {0x01F40DFF, 0x1651, 0x4403, {0x89, 0xAF, 0x05, 0xAA, 0xFF, 0x14, 0xAD, 0x79}};
const   CLSID   LIBID_ExceptionGeneratorW32Lib	=  {0x9833E204, 0x212E, 0x41F7, {0xB0, 0x6D, 0x30, 0x53, 0xEA, 0xC3, 0xB5, 0xCB}};
const   CLSID   CLSID_ExceptionGeneratorCtrl   =  {0xBB0714DF, 0xEF9A, 0x4730, {0x90, 0xE4, 0x9A, 0x2A, 0x10, 0x7B, 0xF6, 0x7B}};

BEGIN_OBJECT_MAP(ObjectMap)
OBJECT_ENTRY(CLSID_ExceptionGeneratorCtrl, CExceptionGeneratorCtrl)
END_OBJECT_MAP()

/////////////////////////////////////////////////////////////////////////////
// DLL Entry Point

extern "C"
BOOL WINAPI DllMain(HANDLE hInstance, DWORD dwReason, LPVOID /*lpReserved*/)
{
	if (dwReason == DLL_PROCESS_ATTACH)
	{
		_Module.Init(ObjectMap, (HINSTANCE)hInstance);
#ifndef UNDER_CE
		DisableThreadLibraryCalls((HINSTANCE)hInstance);
#endif
	}
	else if (dwReason == DLL_PROCESS_DETACH)
		_Module.Term();
	return TRUE;    // ok
}

/////////////////////////////////////////////////////////////////////////////
// Used to determine whether the DLL can be unloaded by OLE

STDAPI DllCanUnloadNow(void)
{
	return (_Module.GetLockCount()==0) ? S_OK : S_FALSE;
}

/////////////////////////////////////////////////////////////////////////////
// Returns a class factory to create an object of the requested type

STDAPI DllGetClassObject(REFCLSID rclsid, REFIID riid, LPVOID* ppv)
{
	return _Module.GetClassObject(rclsid, riid, ppv);
}

/////////////////////////////////////////////////////////////////////////////
// DllRegisterServer - Adds entries to the system registry

STDAPI DllRegisterServer(void)
{
	// registers object, typelib and all interfaces in typelib
	return _Module.RegisterServer(TRUE);
}

/////////////////////////////////////////////////////////////////////////////
// DllUnregisterServer - Removes entries from the system registry

STDAPI DllUnregisterServer(void)
{
	_Module.UnregisterServer();
	return S_OK;
}

/////////////////////////////////////////////////////////////////////////////
STDAPI DllGetTcCtrl(ITcCtrl** ppCtrl)
{
	if ( ppCtrl == NULL )
		return E_POINTER;

	CComObject<CExceptionGeneratorCtrl>* pCExceptionGeneratorCtrl = new CComObject<CExceptionGeneratorCtrl>();
	if (pCExceptionGeneratorCtrl == NULL) return E_POINTER;
	return pCExceptionGeneratorCtrl->QueryInterface(IID_ITcCtrl, reinterpret_cast<void**>(ppCtrl));
}
