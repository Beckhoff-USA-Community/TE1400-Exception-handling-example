
// ****************** FbTcComExceptionGenerator.cpp *************************
// Generated by TE140x-TargetForMatlabSimulink  2.3.1.1
// MATLAB 9.10.0.1710957 (R2021a) Update 4 (win64)
// TwinCAT 3.1.4024.0
// TwinCAT Target 2.3.1.1
// Beckhoff Automation GmbH & Co. KG     (www.beckhoff.com)
// *************************************************************

#include "TcPch.h"
#pragma hdrstop

#include "FbTcComExceptionGenerator.h"


#include "ObjClassFactory.h"
using namespace TcMgSdk;

///////////////////////////////////////////////////////////////////////////////
// Definitions
///////////////////////////////////////////////////////////////////////////////
#ifdef _DEBUG
#define new DEBUG_NEW
#endif
#if TC_BUILD<=4024
DEFINE_THIS_FILE()
#endif

bool CFbTcComExceptionGenerator::GetImagePointer()
{

	HRESULT hr = S_OK;
			/***Get ImagePointer ***/
		UINT ImgSize = 0;
		hr = SUCCEEDED(hr) ? ipITcADI->GetImageSize(0,&ImgSize) : hr;
		if (FAILED(hr)) error("Could not get ImageSize 0 : Hr: %08X",hr);
		hr = SUCCEEDED(hr) ? ipITcADI->GetImagePtr(ImgSize,0,0,(PPVOID)&pExceptionGenerator_U) : hr;
		if (FAILED(hr)) error("Could not get ImagePtr 0 ExceptionGenerator_U : Hr: %08X",hr);

		hr = SUCCEEDED(hr) ? ipITcADI->GetImageSize(1,&ImgSize) : hr;
		if (FAILED(hr)) error("Could not get ImageSize 1 : Hr: %08X",hr);
		hr = SUCCEEDED(hr) ? ipITcADI->GetImagePtr(ImgSize,0,1,(PPVOID)&pExceptionGenerator_Y) : hr;
		if (FAILED(hr)) error("Could not get ImagePtr 1 ExceptionGenerator_Y : Hr: %08X",hr);

		hr = SUCCEEDED(hr) ? ipITcADI->GetImageSize(3,&ImgSize) : hr;
		if (FAILED(hr)) error("Could not get ImageSize 3 : Hr: %08X",hr);
		hr = SUCCEEDED(hr) ? ipITcADI->GetImagePtr(ImgSize,0,3,(PPVOID)&pExecutionInfo) : hr;
		if (FAILED(hr)) error("Could not get ImagePtr 3 ExecutionInfo : Hr: %08X",hr);


	return SUCCEEDED(hr);
}

bool CFbTcComExceptionGenerator::ReleaseImagePointer()
{

	HRESULT hr = S_OK;
		/*** Release ImagePtr ***/
	if(pExceptionGenerator_U != nullptr)
	{
		hr = SUCCEEDED(hr) ? ipITcADI->ReleaseImagePtr((PVOID)&pExceptionGenerator_U) : hr;
		if(FAILED(hr))
		{
			warning("Could not release ImagePtr 0 (ExceptionGenerator_U): hr =  %X08",hr);
		}
	}
	else
	{
		warning("Could not release ImagePtr 0 (ExceptionGenerator_U): ImagePointer was a nullptr");
	}
	if(pExceptionGenerator_Y != nullptr)
	{
		hr = SUCCEEDED(hr) ? ipITcADI->ReleaseImagePtr((PVOID)&pExceptionGenerator_Y) : hr;
		if(FAILED(hr))
		{
			warning("Could not release ImagePtr 1 (ExceptionGenerator_Y): hr =  %X08",hr);
		}
	}
	else
	{
		warning("Could not release ImagePtr 1 (ExceptionGenerator_Y): ImagePointer was a nullptr");
	}
	if(pExecutionInfo != nullptr)
	{
		hr = SUCCEEDED(hr) ? ipITcADI->ReleaseImagePtr((PVOID)&pExecutionInfo) : hr;
		if(FAILED(hr))
		{
			warning("Could not release ImagePtr 3 (ExecutionInfo): hr =  %X08",hr);
		}
	}
	else
	{
		warning("Could not release ImagePtr 3 (ExecutionInfo): ImagePointer was a nullptr");
	}
	

	return SUCCEEDED(hr);
}

bool CFbTcComExceptionGenerator::GetObjectInterfaces()
{

	HRESULT hr = S_OK;
			/*** Query Interface ipITcUnknown ***/
		hr = SUCCEEDED(hr) ?  ipITComObject->TcQueryInterface(IID_ITcUnknown,(PPVOID)&ipITcUnknown) : hr;
		if (FAILED(hr)) error("TcQueryInterface of ipITcUnknown failed: Hr: %08X",hr);

		/*** Query Interface ipITcPersist ***/
		hr = SUCCEEDED(hr) ?  ipITComObject->TcQueryInterface(IID_ITcPersist,(PPVOID)&ipITcPersist) : hr;
		if (FAILED(hr)) error("TcQueryInterface of ipITcPersist failed: Hr: %08X",hr);

		/*** Query Interface ipITcWatchSource ***/
		hr = SUCCEEDED(hr) ?  ipITComObject->TcQueryInterface(IID_ITcWatchSource,(PPVOID)&ipITcWatchSource) : hr;
		if (FAILED(hr)) error("TcQueryInterface of ipITcWatchSource failed: Hr: %08X",hr);

		/*** Query Interface ipITcCyclic ***/
		hr = SUCCEEDED(hr) ?  ipITComObject->TcQueryInterface(IID_ITcCyclic,(PPVOID)&ipITcCyclic) : hr;
		if (FAILED(hr)) error("TcQueryInterface of ipITcCyclic failed: Hr: %08X",hr);

		/*** Query Interface ipITcPostCyclic ***/
		hr = SUCCEEDED(hr) ?  ipITComObject->TcQueryInterface(IID_ITcPostCyclic,(PPVOID)&ipITcPostCyclic) : hr;
		if (FAILED(hr)) error("TcQueryInterface of ipITcPostCyclic failed: Hr: %08X",hr);

		/*** Query Interface ipITcADI ***/
		hr = SUCCEEDED(hr) ?  ipITComObject->TcQueryInterface(IID_ITcADI,(PPVOID)&ipITcADI) : hr;
		if (FAILED(hr)) error("TcQueryInterface of ipITcADI failed: Hr: %08X",hr);


	return SUCCEEDED(hr);
}

CFbTcComExceptionGenerator::CFbTcComExceptionGenerator()
{

}

CFbTcComExceptionGenerator::~CFbTcComExceptionGenerator()
{

}

bool CFbTcComExceptionGenerator::FB_init(bool bInitRetains, bool bInCopyCode, ST_FB_ExceptionGenerator_TcCOM_InitStruct stInit)
{

	bool bResult = true;
	// Map Parameter
	memcpy(&(this->stInit),&stInit,sizeof(this->stInit));

	HRESULT hr = S_OK;
	 bResult &= __super::Init(0,TC_BUILD_MIN,bInitRetains,bInCopyCode);
	if (!bResult)
	{
		error("__super::Init() did not succeed");
	}
	ITComObjectServerPtr psrv;
	TCOM_STATE eObjState = TCOM_STATE_INVALID;
	if (bResult)
	{
		bResult = GetObjectServer(&psrv);
	}
	if(bResult)
	{
		if(stInit.nOid == OTCID_CreateNewId ||
		   stInit.nOid == OTCID_FirstFreeId ||
		   stInit.nOid == OTCID_LastFreeId)
		{
			hr = SUCCEEDED(hr) ? psrv->TcCreateInstance(GetVersionedCLSID(CID_EXCEPTIONGENERATOR,VID_ExceptionGenerator),IID_ITComObject,(PPVOID)&ipITComObject): hr;
			if (FAILED(hr))
			{
				error("Could not create instance. hr = %X08",hr);
				bResult = false;
			}
			if (bResult)
			{
				hr = ipITComObject->TcSetObjectId(stInit.nOid);
				if (FAILED(hr))
				{
					error("Could not set Object Id. hr = %X08",hr);
					bResult = false;
				}
			}
			if (bResult)
			{
			hr = ipITComObject->TcGetObjState(&eObjState);
			if (FAILED(hr))
				{
					error("Could not get Object state. hr = %X08",hr);
					bResult = false;
				}
			}
			if (bResult && (eObjState < TCOM_STATE_PREOP) && (TCOM_STATE_PREOP <= stInit.eObjState))
			{
				hr = ipITComObject->TcSetObjState(TCOM_STATE_PREOP, psrv, NULL);
				if (FAILED(hr))
				{
					error("TcSetObjState to PreOp failed. hr = %X08",hr);
					bResult = false;
				}
				else
				{
					eObjState = TCOM_STATE_PREOP;
				}
			}
		if (stInit.eObjState > TCOM_STATE_PREOP)
		{
		hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x03002060,sizeof(stInit.nTaskOid),&stInit.nTaskOid) : hr;
	if (FAILED(hr)) error("TcSetObjPara of nTaskOid (OTCID) with PID 0x03002060 failed: Hr: 0x%08X",hr);

	__super::GetTaskPriority(stInit.nTaskOid,stInit.nTaskPriority);
	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x03002070,sizeof(stInit.nTaskPriority),&stInit.nTaskPriority) : hr;
	if (FAILED(hr)) error("TcSetObjPara of nTaskPriority (UDINT) with PID 0x03002070 failed: Hr: 0x%08X",hr);

	__super::GetTaskCycletimeNs(stInit.nTaskOid,stInit.nTaskCycleTimeNs);
	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x03002080,sizeof(stInit.nTaskCycleTimeNs),&stInit.nTaskCycleTimeNs) : hr;
	if (FAILED(hr)) error("TcSetObjPara of nTaskCycleTimeNs (UDINT) with PID 0x03002080 failed: Hr: 0x%08X",hr);

	__super::GetTaskPort(stInit.nTaskOid,stInit.nTaskPort);
	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x03002090,sizeof(stInit.nTaskPort),&stInit.nTaskPort) : hr;
	if (FAILED(hr)) error("TcSetObjPara of nTaskPort (UINT) with PID 0x03002090 failed: Hr: 0x%08X",hr);

	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x030020B0,sizeof(stInit.nTaskSortOrder),&stInit.nTaskSortOrder) : hr;
	if (FAILED(hr)) error("TcSetObjPara of nTaskSortOrder (UDINT) with PID 0x030020B0 failed: Hr: 0x%08X",hr);

	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x00000001,sizeof(stInit.eTraceLevelMax),&stInit.eTraceLevelMax) : hr;
	if (FAILED(hr)) error("TcSetObjPara of eTraceLevelMax (TcTraceLevel) with PID 0x00000001 failed: Hr: 0x%08X",hr);

	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x00000002,sizeof(stInit.eModuleCaller),&stInit.eModuleCaller) : hr;
	if (FAILED(hr)) error("TcSetObjPara of eModuleCaller (TcMgSdk.ModuleCaller) with PID 0x00000002 failed: Hr: 0x%08X",hr);

	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x00000003,sizeof(stInit.eCallerVerification),&stInit.eCallerVerification) : hr;
	if (FAILED(hr)) error("TcSetObjPara of eCallerVerification (TcMgSdk.CallerVerification) with PID 0x00000003 failed: Hr: 0x%08X",hr);

	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x00000004,sizeof(stInit.eStepSizeAdaptation),&stInit.eStepSizeAdaptation) : hr;
	if (FAILED(hr)) error("TcSetObjPara of eStepSizeAdaptation (TcMgSdk.StepSizeAdaptation) with PID 0x00000004 failed: Hr: 0x%08X",hr);

	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x00000005,sizeof(stInit.eExecutionSequence),&stInit.eExecutionSequence) : hr;
	if (FAILED(hr)) error("TcSetObjPara of eExecutionSequence (TcMgSdk.ExecutionSequence1) with PID 0x00000005 failed: Hr: 0x%08X",hr);

	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x00000006,sizeof(stInit.bExecute),&stInit.bExecute) : hr;
	if (FAILED(hr)) error("TcSetObjPara of bExecute (BOOL) with PID 0x00000006 failed: Hr: 0x%08X",hr);

	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x00000007,sizeof(stInit.eAccessLockState),&stInit.eAccessLockState) : hr;
	if (FAILED(hr)) error("TcSetObjPara of eAccessLockState (TCOM_STATE) with PID 0x00000007 failed: Hr: 0x%08X",hr);

	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x00000008,sizeof(stInit.eInitExceptionHandling),&stInit.eInitExceptionHandling) : hr;
	if (FAILED(hr)) error("TcSetObjPara of eInitExceptionHandling (TcMgSdk.FpExcptCtrlSet) with PID 0x00000008 failed: Hr: 0x%08X",hr);

	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x00000009,sizeof(stInit.eUpdateExceptionHandling),&stInit.eUpdateExceptionHandling) : hr;
	if (FAILED(hr)) error("TcSetObjPara of eUpdateExceptionHandling (TcMgSdk.FpExcptCtrlSet) with PID 0x00000009 failed: Hr: 0x%08X",hr);


		}
		bResult = SUCCEEDED(hr);
		}
		else
		{
			/*** Query Instance ***/
			hr = SUCCEEDED(hr) ? hr = psrv->TcQueryObjectInterface(stInit.nOid,IID_ITComObject,(PPVOID)&ipITComObject): hr;
			if (FAILED(hr))
			{
				error("Could not Query Object instance. hr = %X08",hr);
				bResult = false;
			}
			eObjState = GetnObjectState();
			if (bResult && (eObjState < TCOM_STATE_PREOP) && (TCOM_STATE_PREOP <= stInit.eObjState))
			{
				SetnObjectState(TCOM_STATE_PREOP);
			}

		}
		if(bResult)
		{
		/*** Query Interface ipITcUnknown ***/
		hr = SUCCEEDED(hr) ?  ipITComObject->TcQueryInterface(IID_ITcUnknown,(PPVOID)&ipITcUnknown) : hr;
		if (FAILED(hr)) error("TcQueryInterface of ipITcUnknown failed: Hr: %08X",hr);

		/*** Query Interface ipITcPersist ***/
		hr = SUCCEEDED(hr) ?  ipITComObject->TcQueryInterface(IID_ITcPersist,(PPVOID)&ipITcPersist) : hr;
		if (FAILED(hr)) error("TcQueryInterface of ipITcPersist failed: Hr: %08X",hr);

		/*** Query Interface ipITcWatchSource ***/
		hr = SUCCEEDED(hr) ?  ipITComObject->TcQueryInterface(IID_ITcWatchSource,(PPVOID)&ipITcWatchSource) : hr;
		if (FAILED(hr)) error("TcQueryInterface of ipITcWatchSource failed: Hr: %08X",hr);

		/*** Query Interface ipITcCyclic ***/
		hr = SUCCEEDED(hr) ?  ipITComObject->TcQueryInterface(IID_ITcCyclic,(PPVOID)&ipITcCyclic) : hr;
		if (FAILED(hr)) error("TcQueryInterface of ipITcCyclic failed: Hr: %08X",hr);

		/*** Query Interface ipITcPostCyclic ***/
		hr = SUCCEEDED(hr) ?  ipITComObject->TcQueryInterface(IID_ITcPostCyclic,(PPVOID)&ipITcPostCyclic) : hr;
		if (FAILED(hr)) error("TcQueryInterface of ipITcPostCyclic failed: Hr: %08X",hr);

		/*** Query Interface ipITcADI ***/
		hr = SUCCEEDED(hr) ?  ipITComObject->TcQueryInterface(IID_ITcADI,(PPVOID)&ipITcADI) : hr;
		if (FAILED(hr)) error("TcQueryInterface of ipITcADI failed: Hr: %08X",hr);


		bResult = SUCCEEDED(hr);
		}
	}
	SetnObjectState(stInit.eObjState);

	return bResult;
}

void CFbTcComExceptionGenerator::_FB_init(ST_FB_init_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->FB_init( ST_Param->bInitRetains, ST_Param->bInCopyCode, ST_Param->stInit );
}

bool CFbTcComExceptionGenerator::FB_afterinit()
{

	bool bResult = true;
	HRESULT hr = S_OK;

	bResult = SUCCEEDED(hr);
	return bResult;
}

void CFbTcComExceptionGenerator::_FB_AfterInit(ST_FB_afterinit_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->FB_afterinit(  );
}

bool CFbTcComExceptionGenerator::Reinit(ST_FB_ExceptionGenerator_TcCOM_InitStruct stReInit)
{

	bool bResult = true;
	HRESULT hr = S_OK;
	memcpy(&stInit,&stReInit,sizeof(stInit));
	SetnObjectState(TCOM_STATE_PREOP);
		hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x03002060,sizeof(stInit.nTaskOid),&stInit.nTaskOid) : hr;
	if (FAILED(hr)) error("TcSetObjPara of nTaskOid (OTCID) with PID 0x03002060 failed: Hr: 0x%08X",hr);

	__super::GetTaskPriority(stInit.nTaskOid,stInit.nTaskPriority);
	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x03002070,sizeof(stInit.nTaskPriority),&stInit.nTaskPriority) : hr;
	if (FAILED(hr)) error("TcSetObjPara of nTaskPriority (UDINT) with PID 0x03002070 failed: Hr: 0x%08X",hr);

	__super::GetTaskCycletimeNs(stInit.nTaskOid,stInit.nTaskCycleTimeNs);
	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x03002080,sizeof(stInit.nTaskCycleTimeNs),&stInit.nTaskCycleTimeNs) : hr;
	if (FAILED(hr)) error("TcSetObjPara of nTaskCycleTimeNs (UDINT) with PID 0x03002080 failed: Hr: 0x%08X",hr);

	__super::GetTaskPort(stInit.nTaskOid,stInit.nTaskPort);
	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x03002090,sizeof(stInit.nTaskPort),&stInit.nTaskPort) : hr;
	if (FAILED(hr)) error("TcSetObjPara of nTaskPort (UINT) with PID 0x03002090 failed: Hr: 0x%08X",hr);

	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x030020B0,sizeof(stInit.nTaskSortOrder),&stInit.nTaskSortOrder) : hr;
	if (FAILED(hr)) error("TcSetObjPara of nTaskSortOrder (UDINT) with PID 0x030020B0 failed: Hr: 0x%08X",hr);

	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x00000001,sizeof(stInit.eTraceLevelMax),&stInit.eTraceLevelMax) : hr;
	if (FAILED(hr)) error("TcSetObjPara of eTraceLevelMax (TcTraceLevel) with PID 0x00000001 failed: Hr: 0x%08X",hr);

	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x00000002,sizeof(stInit.eModuleCaller),&stInit.eModuleCaller) : hr;
	if (FAILED(hr)) error("TcSetObjPara of eModuleCaller (TcMgSdk.ModuleCaller) with PID 0x00000002 failed: Hr: 0x%08X",hr);

	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x00000003,sizeof(stInit.eCallerVerification),&stInit.eCallerVerification) : hr;
	if (FAILED(hr)) error("TcSetObjPara of eCallerVerification (TcMgSdk.CallerVerification) with PID 0x00000003 failed: Hr: 0x%08X",hr);

	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x00000004,sizeof(stInit.eStepSizeAdaptation),&stInit.eStepSizeAdaptation) : hr;
	if (FAILED(hr)) error("TcSetObjPara of eStepSizeAdaptation (TcMgSdk.StepSizeAdaptation) with PID 0x00000004 failed: Hr: 0x%08X",hr);

	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x00000005,sizeof(stInit.eExecutionSequence),&stInit.eExecutionSequence) : hr;
	if (FAILED(hr)) error("TcSetObjPara of eExecutionSequence (TcMgSdk.ExecutionSequence1) with PID 0x00000005 failed: Hr: 0x%08X",hr);

	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x00000006,sizeof(stInit.bExecute),&stInit.bExecute) : hr;
	if (FAILED(hr)) error("TcSetObjPara of bExecute (BOOL) with PID 0x00000006 failed: Hr: 0x%08X",hr);

	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x00000007,sizeof(stInit.eAccessLockState),&stInit.eAccessLockState) : hr;
	if (FAILED(hr)) error("TcSetObjPara of eAccessLockState (TCOM_STATE) with PID 0x00000007 failed: Hr: 0x%08X",hr);

	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x00000008,sizeof(stInit.eInitExceptionHandling),&stInit.eInitExceptionHandling) : hr;
	if (FAILED(hr)) error("TcSetObjPara of eInitExceptionHandling (TcMgSdk.FpExcptCtrlSet) with PID 0x00000008 failed: Hr: 0x%08X",hr);

	hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x00000009,sizeof(stInit.eUpdateExceptionHandling),&stInit.eUpdateExceptionHandling) : hr;
	if (FAILED(hr)) error("TcSetObjPara of eUpdateExceptionHandling (TcMgSdk.FpExcptCtrlSet) with PID 0x00000009 failed: Hr: 0x%08X",hr);


	SetnObjectState(stInit.eObjState);
return bResult;
}

void CFbTcComExceptionGenerator::_Reinit(ST_Reinit_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->Reinit( ST_Param->stReInit );
}

bool CFbTcComExceptionGenerator::FB_Main()
{

	bool bResult = true;
	if (GetnObjectState() != TCOM_STATE_OP)
	{
		error("Module is not in OP");
		return false;
	}
	CLSID clsid;
	const CLSID clsidcmp = GetVersionedCLSID(CID_EXCEPTIONGENERATOR,VID_ExceptionGenerator);
	if (FAILED(ipITcPersist->GetClassId(clsid)) || memcmp(&clsid, &clsidcmp, sizeof(CLSID) != 0))
	{
		error("CLSID does not match");
		return false;
	}


ModuleCaller eCaller;
if (bResult)
{
	PVOID pCaller = &eCaller;
	ULONG nCaller = sizeof(eCaller);
	HRESULT hr = ipITComObject->TcGetObjPara(0x00000002,nCaller,pCaller);
	if (FAILED(hr)) error("TcGetObjPara of eModuleCaller (TcMgSdk.ModuleCaller) with PID 0x00000002 failed: Hr: 0x%08X",hr);
	bResult &= SUCCEEDED(hr);
}
if (bResult && eCaller == ModuleCaller::Module)
{
	ITcRTimeTaskPtr ipTask;
	bResult &= GetImagePointer();
	if (bResult)
	{
		bResult &= GetCurrentTask(&ipTask);
		if (bResult)
		{
				memcpy(pExceptionGenerator_U,&stExceptionGenerator_U,sizeof(stExceptionGenerator_U));

			bResult &= SUCCEEDED(ipITcCyclic->CycleUpdate(ipTask,0,0));
				memcpy(&stExceptionGenerator_Y,pExceptionGenerator_Y,sizeof(stExceptionGenerator_Y));
	memcpy(&stExecutionInfo,pExecutionInfo,sizeof(stExecutionInfo));

		}
		bResult &= ReleaseImagePointer();
	}
}
else
{
	error("TctModuleCallByType must be CallBy_Module");
	bResult = false;
}

	return bResult;
}

void CFbTcComExceptionGenerator::_FB_Main(ST_FB_Main_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->FB_Main(  );
}

bool CFbTcComExceptionGenerator::FB_exit(bool bInCopyCode)
{

	bool bResult = true;

	/* Check if FB is owner */
	if(stInit.nOid == OTCID_CreateNewId ||
	   stInit.nOid == OTCID_FirstFreeId ||
	   stInit.nOid == OTCID_LastFreeId)
	{
		SetnObjectState(TCOM_STATE_INIT);
	}
	/*** Release Interface ITcUnknown ***/
	if (ipITcUnknown != NULL)
	{
		ipITcUnknown->TcRelease();
		ipITcUnknown = NULL;

	}
	/*** Release Interface ITcPersist ***/
	if (ipITcPersist != NULL)
	{
		ipITcPersist->TcRelease();
		ipITcPersist = NULL;

	}
	/*** Release Interface ITComObject ***/
	if (ipITComObject != NULL)
	{
		ipITComObject->TcRelease();
		ipITComObject = NULL;

	}
	/*** Release Interface ITcWatchSource ***/
	if (ipITcWatchSource != NULL)
	{
		ipITcWatchSource->TcRelease();
		ipITcWatchSource = NULL;

	}
	/*** Release Interface ITcCyclic ***/
	if (ipITcCyclic != NULL)
	{
		ipITcCyclic->TcRelease();
		ipITcCyclic = NULL;

	}
	/*** Release Interface ITcPostCyclic ***/
	if (ipITcPostCyclic != NULL)
	{
		ipITcPostCyclic->TcRelease();
		ipITcPostCyclic = NULL;

	}
	/*** Release Interface ITcADI ***/
	if (ipITcADI != NULL)
	{
		ipITcADI->TcRelease();
		ipITcADI = NULL;

	}

	__super::Exit(bInCopyCode);

	return bResult;
}

void CFbTcComExceptionGenerator::_FB_exit(ST_FB_exit_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->FB_exit( ST_Param->bInCopyCode );
}

ULONG CFbTcComExceptionGenerator::GetnTaskOid()
{

		HRESULT hr = S_OK;
		ULONG param = 0;
		PVOID pData = &param;
		ULONG nSize = sizeof(param);
		hr = SUCCEEDED(hr) ? hr = ipITComObject->TcGetObjPara(0x03002060,nSize,pData) : hr;
		if (FAILED(hr)) error("TcSetObjPara of TaskOid (OTCID) with PID 0x03002060 failed: Hr: 0x%08X",hr);

		return param;
}

void CFbTcComExceptionGenerator::_GetnTaskOid(ST_GetnTaskOid_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->GetnTaskOid(  );
}

void CFbTcComExceptionGenerator::SetnTaskOid(ULONG nParam)
{

	HRESULT hr = S_OK;
	TCOM_STATE state = GetnObjectState();
	if (state > TCOM_STATE_SAFEOP)
	{
		error("Cannot set TaskOid. Object is in OP");
	}
	else
	{
		ULONG TaskPriority;
		ULONG TaskCycleTimeNs;
		USHORT TaskPort;

		hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x03002060,sizeof(nParam),&nParam) : hr;
		if (FAILED(hr)) error("TcSetObjPara of TaskOid (OTCID) with PID 0x03002060 failed: Hr: 0x%08X",hr);

		__super::GetTaskPriority(nParam,TaskPriority);
		hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x03002070,sizeof(TaskPriority),&TaskPriority) : hr;
		if (FAILED(hr)) error("TcSetObjPara of TaskPriority (UDINT) with PID 0x03002070 failed: Hr: 0x%08X",hr);

		__super::GetTaskCycletimeNs(nParam,TaskCycleTimeNs);
		hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x03002080,sizeof(TaskCycleTimeNs),&TaskCycleTimeNs) : hr;
		if (FAILED(hr)) error("TcSetObjPara of TaskCycleTimeNs (UDINT) with PID 0x03002080 failed: Hr: 0x%08X",hr);

		__super::GetTaskPort(nParam,TaskPort);
		hr = SUCCEEDED(hr) ? hr = ipITComObject->TcSetObjPara(0x03002090,sizeof(TaskPort),&TaskPort) : hr;
		if (FAILED(hr)) error("TcSetObjPara of TaskPort (UINT) with PID 0x03002090 failed: Hr: 0x%08X",hr);	}
}

void CFbTcComExceptionGenerator::_SetnTaskOid(ST_SetnTaskOid_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	((CFbTcComExceptionGenerator*)ST_Param->pInst)->SetnTaskOid( ST_Param->nParam );
}

TCOM_STATE CFbTcComExceptionGenerator::GetnObjectState()
{

	HRESULT hr = S_OK;
	TCOM_STATE param = TCOM_STATE_INVALID;
	if (ipITComObject != NULL)
	{
		hr = ipITComObject->TcGetObjState(&param);
		if (FAILED(hr))
		{
			error("Could not get Object state. hr = %X08",hr);
		}
	}
	else
	{
		error("TComObject Pointer is NULL");
	}
	return param;
}

void CFbTcComExceptionGenerator::_GetnObjectState(ST_GetnObjectState_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->GetnObjectState(  );
}

void CFbTcComExceptionGenerator::SetnObjectState(TCOM_STATE eParam)
{

	HRESULT hr = S_OK;
	TCOM_STATE state;
	BOOL bShiftUp;
	BOOL bShiftDown;
	ITComObjectServerPtr pSrv;
	if (!GetObjectServer(&pSrv))
		hr = E_POINTER;

	if (ipITComObject == NULL)
		hr = E_POINTER;

	if (SUCCEEDED(hr))
		hr = ipITComObject->TcGetObjState(&state);
	
	bShiftUp = eParam > state;
	bShiftDown = eParam < state;
	
	if (SUCCEEDED(hr) && (bShiftUp || bShiftDown))
	{
		switch(state)
		{
			case TCOM_STATE_INIT:
			if (bShiftUp)
				{
					hr = ipITComObject->TcSetObjState(TCOM_STATE_PREOP,pSrv,NULL);
				}
			
			case TCOM_STATE_PREOP:
				if (bShiftUp)
				{
					hr = SUCCEEDED(hr) ? ipITComObject->TcSetObjState(TCOM_STATE_SAFEOP,pSrv,NULL) : hr;	
				}
				else if(bShiftDown)
				{
					hr = SUCCEEDED(hr) ? ipITComObject->TcSetObjState(TCOM_STATE_INIT,pSrv,NULL) : hr;	
					break;
				}
		
			case TCOM_STATE_SAFEOP:
				if (bShiftUp)
				{
					hr = SUCCEEDED(hr) ? ipITComObject->TcSetObjState(TCOM_STATE_OP,pSrv,NULL) : hr;	
				}
				else if(bShiftDown)
				{
					hr = SUCCEEDED(hr) ? ipITComObject->TcSetObjState(TCOM_STATE_PREOP,pSrv,NULL) : hr;	
					break;
				}
			
			case TCOM_STATE_OP:
				if(bShiftDown)
				{
					hr = SUCCEEDED(hr) ? ipITComObject->TcSetObjState(TCOM_STATE_SAFEOP,pSrv,NULL) : hr;	
				}
			
		}
		if (SUCCEEDED(hr))
		{
			SetnObjectState(eParam);
		}
	}

	if(FAILED(hr))
	{
		error("Could not set Object state. hr = %X08",hr);
	}

}

void CFbTcComExceptionGenerator::_SetnObjectState(ST_SetnObjectState_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	((CFbTcComExceptionGenerator*)ST_Param->pInst)->SetnObjectState( ST_Param->eParam );
}

ITcADI* CFbTcComExceptionGenerator::GetipADI()
{

		return ipITcADI;
}

void CFbTcComExceptionGenerator::_GetipADI(ST_GetipADI_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->GetipADI(  );
}

void CFbTcComExceptionGenerator::SetipADI(ITcADI* ipParam)
{

}

void CFbTcComExceptionGenerator::_SetipADI(ST_SetipADI_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	((CFbTcComExceptionGenerator*)ST_Param->pInst)->SetipADI( ST_Param->ipParam );
}

ITComObject* CFbTcComExceptionGenerator::GetipTcComObject()
{

		return ipITComObject;
}

void CFbTcComExceptionGenerator::_GetipTcComObject(ST_GetipTcComObject_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->GetipTcComObject(  );
}

void CFbTcComExceptionGenerator::SetipTcComObject(ITComObject* ipParam)
{

}

void CFbTcComExceptionGenerator::_SetipTcComObject(ST_SetipTcComObject_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	((CFbTcComExceptionGenerator*)ST_Param->pInst)->SetipTcComObject( ST_Param->ipParam );
}

ULONG CFbTcComExceptionGenerator::GetnTaskPriority()
{
	ULONG param;
 	PVOID pparam = &param;
 	ULONG nparam = sizeof(param);
 	HRESULT hr =  ipITComObject->TcGetObjPara(0x03002070,nparam,pparam);
 	if  FAILED(hr) 
	{
		 error("TcGetObjPara of nTaskPriority(ULONG) with PID 0x03002070 failed: hr: 0x%08X",hr);
	}
	return param;

}

void CFbTcComExceptionGenerator::_GetnTaskPriority(ST_GetnTaskPriority_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->GetnTaskPriority(  );
}

void CFbTcComExceptionGenerator::SetnTaskPriority(ULONG nParam)
{
	HRESULT hr =  ipITComObject->TcSetObjPara(0x03002070,sizeof(nParam),&nParam);
 	if  FAILED(hr) 
	{
		 error("TcSetObjPara of nTaskPriority(ULONG) with PID 0x03002070 failed: hr: 0x%08X",hr);
		}

}

void CFbTcComExceptionGenerator::_SetnTaskPriority(ST_SetnTaskPriority_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	((CFbTcComExceptionGenerator*)ST_Param->pInst)->SetnTaskPriority( ST_Param->nParam );
}

ULONG CFbTcComExceptionGenerator::GetnTaskCycleTimeNs()
{
	ULONG param;
 	PVOID pparam = &param;
 	ULONG nparam = sizeof(param);
 	HRESULT hr =  ipITComObject->TcGetObjPara(0x03002080,nparam,pparam);
 	if  FAILED(hr) 
	{
		 error("TcGetObjPara of nTaskCycleTimeNs(ULONG) with PID 0x03002080 failed: hr: 0x%08X",hr);
	}
	return param;

}

void CFbTcComExceptionGenerator::_GetnTaskCycleTimeNs(ST_GetnTaskCycleTimeNs_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->GetnTaskCycleTimeNs(  );
}

void CFbTcComExceptionGenerator::SetnTaskCycleTimeNs(ULONG nParam)
{
	HRESULT hr =  ipITComObject->TcSetObjPara(0x03002080,sizeof(nParam),&nParam);
 	if  FAILED(hr) 
	{
		 error("TcSetObjPara of nTaskCycleTimeNs(ULONG) with PID 0x03002080 failed: hr: 0x%08X",hr);
		}

}

void CFbTcComExceptionGenerator::_SetnTaskCycleTimeNs(ST_SetnTaskCycleTimeNs_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	((CFbTcComExceptionGenerator*)ST_Param->pInst)->SetnTaskCycleTimeNs( ST_Param->nParam );
}

USHORT CFbTcComExceptionGenerator::GetnTaskPort()
{
	USHORT param;
 	PVOID pparam = &param;
 	ULONG nparam = sizeof(param);
 	HRESULT hr =  ipITComObject->TcGetObjPara(0x03002090,nparam,pparam);
 	if  FAILED(hr) 
	{
		 error("TcGetObjPara of nTaskPort(USHORT) with PID 0x03002090 failed: hr: 0x%08X",hr);
	}
	return param;

}

void CFbTcComExceptionGenerator::_GetnTaskPort(ST_GetnTaskPort_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->GetnTaskPort(  );
}

void CFbTcComExceptionGenerator::SetnTaskPort(USHORT nParam)
{
	HRESULT hr =  ipITComObject->TcSetObjPara(0x03002090,sizeof(nParam),&nParam);
 	if  FAILED(hr) 
	{
		 error("TcSetObjPara of nTaskPort(USHORT) with PID 0x03002090 failed: hr: 0x%08X",hr);
		}

}

void CFbTcComExceptionGenerator::_SetnTaskPort(ST_SetnTaskPort_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	((CFbTcComExceptionGenerator*)ST_Param->pInst)->SetnTaskPort( ST_Param->nParam );
}

ULONG CFbTcComExceptionGenerator::GetnTaskSortOrder()
{
	ULONG param;
 	PVOID pparam = &param;
 	ULONG nparam = sizeof(param);
 	HRESULT hr =  ipITComObject->TcGetObjPara(0x030020B0,nparam,pparam);
 	if  FAILED(hr) 
	{
		 error("TcGetObjPara of nTaskSortOrder(ULONG) with PID 0x030020B0 failed: hr: 0x%08X",hr);
	}
	return param;

}

void CFbTcComExceptionGenerator::_GetnTaskSortOrder(ST_GetnTaskSortOrder_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->GetnTaskSortOrder(  );
}

void CFbTcComExceptionGenerator::SetnTaskSortOrder(ULONG nParam)
{
	HRESULT hr =  ipITComObject->TcSetObjPara(0x030020B0,sizeof(nParam),&nParam);
 	if  FAILED(hr) 
	{
		 error("TcSetObjPara of nTaskSortOrder(ULONG) with PID 0x030020B0 failed: hr: 0x%08X",hr);
		}

}

void CFbTcComExceptionGenerator::_SetnTaskSortOrder(ST_SetnTaskSortOrder_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	((CFbTcComExceptionGenerator*)ST_Param->pInst)->SetnTaskSortOrder( ST_Param->nParam );
}

TcTraceLevel CFbTcComExceptionGenerator::GeteTraceLevelMax()
{
	TcTraceLevel param;
 	PVOID pparam = &param;
 	ULONG nparam = sizeof(param);
 	HRESULT hr =  ipITComObject->TcGetObjPara(0x00000001,nparam,pparam);
 	if  FAILED(hr) 
	{
		 error("TcGetObjPara of eTraceLevelMax(TcTraceLevel) with PID 0x00000001 failed: hr: 0x%08X",hr);
	}
	return param;

}

void CFbTcComExceptionGenerator::_GeteTraceLevelMax(ST_GeteTraceLevelMax_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->GeteTraceLevelMax(  );
}

void CFbTcComExceptionGenerator::SeteTraceLevelMax(TcTraceLevel eParam)
{
	HRESULT hr =  ipITComObject->TcSetObjPara(0x00000001,sizeof(eParam),&eParam);
 	if  FAILED(hr) 
	{
		 error("TcSetObjPara of eTraceLevelMax(TcTraceLevel) with PID 0x00000001 failed: hr: 0x%08X",hr);
		}

}

void CFbTcComExceptionGenerator::_SeteTraceLevelMax(ST_SeteTraceLevelMax_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	((CFbTcComExceptionGenerator*)ST_Param->pInst)->SeteTraceLevelMax( ST_Param->eParam );
}

TcMgSdk::ModuleCaller CFbTcComExceptionGenerator::GeteModuleCaller()
{
	TcMgSdk::ModuleCaller param;
 	PVOID pparam = &param;
 	ULONG nparam = sizeof(param);
 	HRESULT hr =  ipITComObject->TcGetObjPara(0x00000002,nparam,pparam);
 	if  FAILED(hr) 
	{
		 error("TcGetObjPara of eModuleCaller(TcMgSdk::ModuleCaller) with PID 0x00000002 failed: hr: 0x%08X",hr);
	}
	return param;

}

void CFbTcComExceptionGenerator::_GeteModuleCaller(ST_GeteModuleCaller_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->GeteModuleCaller(  );
}

void CFbTcComExceptionGenerator::SeteModuleCaller(TcMgSdk::ModuleCaller eParam)
{
	HRESULT hr =  ipITComObject->TcSetObjPara(0x00000002,sizeof(eParam),&eParam);
 	if  FAILED(hr) 
	{
		 error("TcSetObjPara of eModuleCaller(TcMgSdk::ModuleCaller) with PID 0x00000002 failed: hr: 0x%08X",hr);
		}

}

void CFbTcComExceptionGenerator::_SeteModuleCaller(ST_SeteModuleCaller_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	((CFbTcComExceptionGenerator*)ST_Param->pInst)->SeteModuleCaller( ST_Param->eParam );
}

TcMgSdk::CallerVerification CFbTcComExceptionGenerator::GeteCallerVerification()
{
	TcMgSdk::CallerVerification param;
 	PVOID pparam = &param;
 	ULONG nparam = sizeof(param);
 	HRESULT hr =  ipITComObject->TcGetObjPara(0x00000003,nparam,pparam);
 	if  FAILED(hr) 
	{
		 error("TcGetObjPara of eCallerVerification(TcMgSdk::CallerVerification) with PID 0x00000003 failed: hr: 0x%08X",hr);
	}
	return param;

}

void CFbTcComExceptionGenerator::_GeteCallerVerification(ST_GeteCallerVerification_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->GeteCallerVerification(  );
}

void CFbTcComExceptionGenerator::SeteCallerVerification(TcMgSdk::CallerVerification eParam)
{
	HRESULT hr =  ipITComObject->TcSetObjPara(0x00000003,sizeof(eParam),&eParam);
 	if  FAILED(hr) 
	{
		 error("TcSetObjPara of eCallerVerification(TcMgSdk::CallerVerification) with PID 0x00000003 failed: hr: 0x%08X",hr);
		}

}

void CFbTcComExceptionGenerator::_SeteCallerVerification(ST_SeteCallerVerification_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	((CFbTcComExceptionGenerator*)ST_Param->pInst)->SeteCallerVerification( ST_Param->eParam );
}

TcMgSdk::StepSizeAdaptation CFbTcComExceptionGenerator::GeteStepSizeAdaptation()
{
	TcMgSdk::StepSizeAdaptation param;
 	PVOID pparam = &param;
 	ULONG nparam = sizeof(param);
 	HRESULT hr =  ipITComObject->TcGetObjPara(0x00000004,nparam,pparam);
 	if  FAILED(hr) 
	{
		 error("TcGetObjPara of eStepSizeAdaptation(TcMgSdk::StepSizeAdaptation) with PID 0x00000004 failed: hr: 0x%08X",hr);
	}
	return param;

}

void CFbTcComExceptionGenerator::_GeteStepSizeAdaptation(ST_GeteStepSizeAdaptation_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->GeteStepSizeAdaptation(  );
}

void CFbTcComExceptionGenerator::SeteStepSizeAdaptation(TcMgSdk::StepSizeAdaptation eParam)
{
	HRESULT hr =  ipITComObject->TcSetObjPara(0x00000004,sizeof(eParam),&eParam);
 	if  FAILED(hr) 
	{
		 error("TcSetObjPara of eStepSizeAdaptation(TcMgSdk::StepSizeAdaptation) with PID 0x00000004 failed: hr: 0x%08X",hr);
		}

}

void CFbTcComExceptionGenerator::_SeteStepSizeAdaptation(ST_SeteStepSizeAdaptation_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	((CFbTcComExceptionGenerator*)ST_Param->pInst)->SeteStepSizeAdaptation( ST_Param->eParam );
}

TcMgSdk::ExecutionSequence1 CFbTcComExceptionGenerator::GeteExecutionSequence()
{
	TcMgSdk::ExecutionSequence1 param;
 	PVOID pparam = &param;
 	ULONG nparam = sizeof(param);
 	HRESULT hr =  ipITComObject->TcGetObjPara(0x00000005,nparam,pparam);
 	if  FAILED(hr) 
	{
		 error("TcGetObjPara of eExecutionSequence(TcMgSdk::ExecutionSequence1) with PID 0x00000005 failed: hr: 0x%08X",hr);
	}
	return param;

}

void CFbTcComExceptionGenerator::_GeteExecutionSequence(ST_GeteExecutionSequence_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->GeteExecutionSequence(  );
}

void CFbTcComExceptionGenerator::SeteExecutionSequence(TcMgSdk::ExecutionSequence1 eParam)
{
	HRESULT hr =  ipITComObject->TcSetObjPara(0x00000005,sizeof(eParam),&eParam);
 	if  FAILED(hr) 
	{
		 error("TcSetObjPara of eExecutionSequence(TcMgSdk::ExecutionSequence1) with PID 0x00000005 failed: hr: 0x%08X",hr);
		}

}

void CFbTcComExceptionGenerator::_SeteExecutionSequence(ST_SeteExecutionSequence_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	((CFbTcComExceptionGenerator*)ST_Param->pInst)->SeteExecutionSequence( ST_Param->eParam );
}

bool CFbTcComExceptionGenerator::GetbExecute()
{
	bool param;
 	PVOID pparam = &param;
 	ULONG nparam = sizeof(param);
 	HRESULT hr =  ipITComObject->TcGetObjPara(0x00000006,nparam,pparam);
 	if  FAILED(hr) 
	{
		 error("TcGetObjPara of bExecute(bool) with PID 0x00000006 failed: hr: 0x%08X",hr);
	}
	return param;

}

void CFbTcComExceptionGenerator::_GetbExecute(ST_GetbExecute_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->GetbExecute(  );
}

void CFbTcComExceptionGenerator::SetbExecute(bool bParam)
{
	HRESULT hr =  ipITComObject->TcSetObjPara(0x00000006,sizeof(bParam),&bParam);
 	if  FAILED(hr) 
	{
		 error("TcSetObjPara of bExecute(bool) with PID 0x00000006 failed: hr: 0x%08X",hr);
		}

}

void CFbTcComExceptionGenerator::_SetbExecute(ST_SetbExecute_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	((CFbTcComExceptionGenerator*)ST_Param->pInst)->SetbExecute( ST_Param->bParam );
}

TCOM_STATE CFbTcComExceptionGenerator::GeteAccessLockState()
{
	TCOM_STATE param;
 	PVOID pparam = &param;
 	ULONG nparam = sizeof(param);
 	HRESULT hr =  ipITComObject->TcGetObjPara(0x00000007,nparam,pparam);
 	if  FAILED(hr) 
	{
		 error("TcGetObjPara of eAccessLockState(TCOM_STATE) with PID 0x00000007 failed: hr: 0x%08X",hr);
	}
	return param;

}

void CFbTcComExceptionGenerator::_GeteAccessLockState(ST_GeteAccessLockState_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->GeteAccessLockState(  );
}

void CFbTcComExceptionGenerator::SeteAccessLockState(TCOM_STATE eParam)
{
	HRESULT hr =  ipITComObject->TcSetObjPara(0x00000007,sizeof(eParam),&eParam);
 	if  FAILED(hr) 
	{
		 error("TcSetObjPara of eAccessLockState(TCOM_STATE) with PID 0x00000007 failed: hr: 0x%08X",hr);
		}

}

void CFbTcComExceptionGenerator::_SeteAccessLockState(ST_SeteAccessLockState_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	((CFbTcComExceptionGenerator*)ST_Param->pInst)->SeteAccessLockState( ST_Param->eParam );
}

TcMgSdk::FpExcptCtrlSet CFbTcComExceptionGenerator::GeteInitExceptionHandling()
{
	TcMgSdk::FpExcptCtrlSet param;
 	PVOID pparam = &param;
 	ULONG nparam = sizeof(param);
 	HRESULT hr =  ipITComObject->TcGetObjPara(0x00000008,nparam,pparam);
 	if  FAILED(hr) 
	{
		 error("TcGetObjPara of eInitExceptionHandling(TcMgSdk::FpExcptCtrlSet) with PID 0x00000008 failed: hr: 0x%08X",hr);
	}
	return param;

}

void CFbTcComExceptionGenerator::_GeteInitExceptionHandling(ST_GeteInitExceptionHandling_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->GeteInitExceptionHandling(  );
}

void CFbTcComExceptionGenerator::SeteInitExceptionHandling(TcMgSdk::FpExcptCtrlSet eParam)
{
	HRESULT hr =  ipITComObject->TcSetObjPara(0x00000008,sizeof(eParam),&eParam);
 	if  FAILED(hr) 
	{
		 error("TcSetObjPara of eInitExceptionHandling(TcMgSdk::FpExcptCtrlSet) with PID 0x00000008 failed: hr: 0x%08X",hr);
		}

}

void CFbTcComExceptionGenerator::_SeteInitExceptionHandling(ST_SeteInitExceptionHandling_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	((CFbTcComExceptionGenerator*)ST_Param->pInst)->SeteInitExceptionHandling( ST_Param->eParam );
}

TcMgSdk::FpExcptCtrlSet CFbTcComExceptionGenerator::GeteUpdateExceptionHandling()
{
	TcMgSdk::FpExcptCtrlSet param;
 	PVOID pparam = &param;
 	ULONG nparam = sizeof(param);
 	HRESULT hr =  ipITComObject->TcGetObjPara(0x00000009,nparam,pparam);
 	if  FAILED(hr) 
	{
		 error("TcGetObjPara of eUpdateExceptionHandling(TcMgSdk::FpExcptCtrlSet) with PID 0x00000009 failed: hr: 0x%08X",hr);
	}
	return param;

}

void CFbTcComExceptionGenerator::_GeteUpdateExceptionHandling(ST_GeteUpdateExceptionHandling_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->GeteUpdateExceptionHandling(  );
}

void CFbTcComExceptionGenerator::SeteUpdateExceptionHandling(TcMgSdk::FpExcptCtrlSet eParam)
{
	HRESULT hr =  ipITComObject->TcSetObjPara(0x00000009,sizeof(eParam),&eParam);
 	if  FAILED(hr) 
	{
		 error("TcSetObjPara of eUpdateExceptionHandling(TcMgSdk::FpExcptCtrlSet) with PID 0x00000009 failed: hr: 0x%08X",hr);
		}

}

void CFbTcComExceptionGenerator::_SeteUpdateExceptionHandling(ST_SeteUpdateExceptionHandling_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	((CFbTcComExceptionGenerator*)ST_Param->pInst)->SeteUpdateExceptionHandling( ST_Param->eParam );
}

TcMgSdk::ModuleBuildInfo CFbTcComExceptionGenerator::GetstModuleBuildInfo()
{
	TcMgSdk::ModuleBuildInfo param;
 	PVOID pparam = &param;
 	ULONG nparam = sizeof(param);
 	HRESULT hr =  ipITComObject->TcGetObjPara(0x0000000A,nparam,pparam);
 	if  FAILED(hr) 
	{
		 error("TcGetObjPara of stModuleBuildInfo(TcMgSdk::ModuleBuildInfo) with PID 0x0000000A failed: hr: 0x%08X",hr);
	}
	return param;

}

void CFbTcComExceptionGenerator::_GetstModuleBuildInfo(ST_GetstModuleBuildInfo_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->GetstModuleBuildInfo(  );
}

void CFbTcComExceptionGenerator::SetstModuleBuildInfo(TcMgSdk::ModuleBuildInfo stParam)
{
	HRESULT hr =  ipITComObject->TcSetObjPara(0x0000000A,sizeof(stParam),&stParam);
 	if  FAILED(hr) 
	{
		 error("TcSetObjPara of stModuleBuildInfo(TcMgSdk::ModuleBuildInfo) with PID 0x0000000A failed: hr: 0x%08X",hr);
		}

}

void CFbTcComExceptionGenerator::_SetstModuleBuildInfo(ST_SetstModuleBuildInfo_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	((CFbTcComExceptionGenerator*)ST_Param->pInst)->SetstModuleBuildInfo( ST_Param->stParam );
}

bool CFbTcComExceptionGenerator::GetbInitialized()
{
	bool param;
 	PVOID pparam = &param;
 	ULONG nparam = sizeof(param);
 	HRESULT hr =  ipITComObject->TcGetObjPara(0x0000000B,nparam,pparam);
 	if  FAILED(hr) 
	{
		 error("TcGetObjPara of bInitialized(bool) with PID 0x0000000B failed: hr: 0x%08X",hr);
	}
	return param;

}

void CFbTcComExceptionGenerator::_GetbInitialized(ST_GetbInitialized_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->GetbInitialized(  );
}

void CFbTcComExceptionGenerator::SetbInitialized(bool bParam)
{
	HRESULT hr =  ipITComObject->TcSetObjPara(0x0000000B,sizeof(bParam),&bParam);
 	if  FAILED(hr) 
	{
		 error("TcSetObjPara of bInitialized(bool) with PID 0x0000000B failed: hr: 0x%08X",hr);
		}

}

void CFbTcComExceptionGenerator::_SetbInitialized(ST_SetbInitialized_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	((CFbTcComExceptionGenerator*)ST_Param->pInst)->SetbInitialized( ST_Param->bParam );
}

TcMgSdk::ExceptionInfo CFbTcComExceptionGenerator::GetstInitExceptionInfo()
{
	TcMgSdk::ExceptionInfo param;
 	PVOID pparam = &param;
 	ULONG nparam = sizeof(param);
 	HRESULT hr =  ipITComObject->TcGetObjPara(0x0000000C,nparam,pparam);
 	if  FAILED(hr) 
	{
		 error("TcGetObjPara of stInitExceptionInfo(TcMgSdk::ExceptionInfo) with PID 0x0000000C failed: hr: 0x%08X",hr);
	}
	return param;

}

void CFbTcComExceptionGenerator::_GetstInitExceptionInfo(ST_GetstInitExceptionInfo_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->GetstInitExceptionInfo(  );
}

void CFbTcComExceptionGenerator::SetstInitExceptionInfo(TcMgSdk::ExceptionInfo stParam)
{
	HRESULT hr =  ipITComObject->TcSetObjPara(0x0000000C,sizeof(stParam),&stParam);
 	if  FAILED(hr) 
	{
		 error("TcSetObjPara of stInitExceptionInfo(TcMgSdk::ExceptionInfo) with PID 0x0000000C failed: hr: 0x%08X",hr);
		}

}

void CFbTcComExceptionGenerator::_SetstInitExceptionInfo(ST_SetstInitExceptionInfo_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	((CFbTcComExceptionGenerator*)ST_Param->pInst)->SetstInitExceptionInfo( ST_Param->stParam );
}

ULONGLONG CFbTcComExceptionGenerator::GetnCycleCount()
{
	ULONGLONG param;
 	PVOID pparam = &param;
 	ULONG nparam = sizeof(param);
 	HRESULT hr =  ipITComObject->TcGetObjPara(0x0000000D,nparam,pparam);
 	if  FAILED(hr) 
	{
		 error("TcGetObjPara of nCycleCount(ULONGLONG) with PID 0x0000000D failed: hr: 0x%08X",hr);
	}
	return param;

}

void CFbTcComExceptionGenerator::_GetnCycleCount(ST_GetnCycleCount_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->GetnCycleCount(  );
}

void CFbTcComExceptionGenerator::SetnCycleCount(ULONGLONG nParam)
{
	HRESULT hr =  ipITComObject->TcSetObjPara(0x0000000D,sizeof(nParam),&nParam);
 	if  FAILED(hr) 
	{
		 error("TcSetObjPara of nCycleCount(ULONGLONG) with PID 0x0000000D failed: hr: 0x%08X",hr);
		}

}

void CFbTcComExceptionGenerator::_SetnCycleCount(ST_SetnCycleCount_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	((CFbTcComExceptionGenerator*)ST_Param->pInst)->SetnCycleCount( ST_Param->nParam );
}

ULONGLONG CFbTcComExceptionGenerator::GetnExceptionCount()
{
	ULONGLONG param;
 	PVOID pparam = &param;
 	ULONG nparam = sizeof(param);
 	HRESULT hr =  ipITComObject->TcGetObjPara(0x0000000E,nparam,pparam);
 	if  FAILED(hr) 
	{
		 error("TcGetObjPara of nExceptionCount(ULONGLONG) with PID 0x0000000E failed: hr: 0x%08X",hr);
	}
	return param;

}

void CFbTcComExceptionGenerator::_GetnExceptionCount(ST_GetnExceptionCount_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->GetnExceptionCount(  );
}

void CFbTcComExceptionGenerator::SetnExceptionCount(ULONGLONG nParam)
{
	HRESULT hr =  ipITComObject->TcSetObjPara(0x0000000E,sizeof(nParam),&nParam);
 	if  FAILED(hr) 
	{
		 error("TcSetObjPara of nExceptionCount(ULONGLONG) with PID 0x0000000E failed: hr: 0x%08X",hr);
		}

}

void CFbTcComExceptionGenerator::_SetnExceptionCount(ST_SetnExceptionCount_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	((CFbTcComExceptionGenerator*)ST_Param->pInst)->SetnExceptionCount( ST_Param->nParam );
}

TcMgSdk::ExceptionInfo CFbTcComExceptionGenerator::GetstExeceptionInfo()
{
	TcMgSdk::ExceptionInfo param;
 	PVOID pparam = &param;
 	ULONG nparam = sizeof(param);
 	HRESULT hr =  ipITComObject->TcGetObjPara(0x0000000F,nparam,pparam);
 	if  FAILED(hr) 
	{
		 error("TcGetObjPara of stExeceptionInfo(TcMgSdk::ExceptionInfo) with PID 0x0000000F failed: hr: 0x%08X",hr);
	}
	return param;

}

void CFbTcComExceptionGenerator::_GetstExeceptionInfo(ST_GetstExeceptionInfo_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	ST_Param->result = ((CFbTcComExceptionGenerator*)ST_Param->pInst)->GetstExeceptionInfo(  );
}

void CFbTcComExceptionGenerator::SetstExeceptionInfo(TcMgSdk::ExceptionInfo stParam)
{
	HRESULT hr =  ipITComObject->TcSetObjPara(0x0000000F,sizeof(stParam),&stParam);
 	if  FAILED(hr) 
	{
		 error("TcSetObjPara of stExeceptionInfo(TcMgSdk::ExceptionInfo) with PID 0x0000000F failed: hr: 0x%08X",hr);
		}

}

void CFbTcComExceptionGenerator::_SetstExeceptionInfo(ST_SetstExeceptionInfo_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param)
{
	((CFbTcComExceptionGenerator*)ST_Param->pInst)->SetstExeceptionInfo( ST_Param->stParam );
}





BEGIN_FUNC_MAP_FB(CFbTcComExceptionGenerator)
	FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "FB_INIT", "FB_ExceptionGenerator_TcCOM_InitStruct" "__FB_init", CFbTcComExceptionGenerator::_FB_init)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "FB_AFTERINIT", "FB_ExceptionGenerator_TcCOM_InitStruct" "__FB_afterinit", CFbTcComExceptionGenerator::_FB_AfterInit)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "REINIT", "FB_ExceptionGenerator_TcCOM_InitStruct" "__Reinit", CFbTcComExceptionGenerator::_Reinit)
FUNC_ENTRY_LIB(VID_ExceptionGenerator, CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "FB_ExceptionGenerator_TcCOM_InitStruct" "__main", CFbTcComExceptionGenerator::_FB_Main)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "FB_EXIT", "FB_ExceptionGenerator_TcCOM_InitStruct" "__FB_exit", CFbTcComExceptionGenerator::_FB_exit)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "GETNTASKOID", "FB_ExceptionGenerator_TcCOM_InitStruct" "__GetnTaskOid", CFbTcComExceptionGenerator::_GetnTaskOid)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "SETNTASKOID", "FB_ExceptionGenerator_TcCOM_InitStruct" "__SetnTaskOid", CFbTcComExceptionGenerator::_SetnTaskOid)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "GETNOBJECTSTATE", "FB_ExceptionGenerator_TcCOM_InitStruct" "__GetnObjectState", CFbTcComExceptionGenerator::_GetnObjectState)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "SETNOBJECTSTATE", "FB_ExceptionGenerator_TcCOM_InitStruct" "__SetnObjectState", CFbTcComExceptionGenerator::_SetnObjectState)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "GETIPADI", "FB_ExceptionGenerator_TcCOM_InitStruct" "__GetipADI", CFbTcComExceptionGenerator::_GetipADI)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "SETIPADI", "FB_ExceptionGenerator_TcCOM_InitStruct" "__SetipADI", CFbTcComExceptionGenerator::_SetipADI)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "GETIPTCCOMOBJECT", "FB_ExceptionGenerator_TcCOM_InitStruct" "__GetipTcComObject", CFbTcComExceptionGenerator::_GetipTcComObject)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "SETIPTCCOMOBJECT", "FB_ExceptionGenerator_TcCOM_InitStruct" "__SetipTcComObject", CFbTcComExceptionGenerator::_SetipTcComObject)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "GETNTASKPRIORITY", "FB_ExceptionGenerator_TcCOM_InitStruct" "__GetnTaskPriority", CFbTcComExceptionGenerator::_GetnTaskPriority)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "SETNTASKPRIORITY", "FB_ExceptionGenerator_TcCOM_InitStruct" "__SetnTaskPriority", CFbTcComExceptionGenerator::_SetnTaskPriority)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "GETNTASKCYCLETIMENS", "FB_ExceptionGenerator_TcCOM_InitStruct" "__GetnTaskCycleTimeNs", CFbTcComExceptionGenerator::_GetnTaskCycleTimeNs)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "SETNTASKCYCLETIMENS", "FB_ExceptionGenerator_TcCOM_InitStruct" "__SetnTaskCycleTimeNs", CFbTcComExceptionGenerator::_SetnTaskCycleTimeNs)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "GETNTASKPORT", "FB_ExceptionGenerator_TcCOM_InitStruct" "__GetnTaskPort", CFbTcComExceptionGenerator::_GetnTaskPort)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "SETNTASKPORT", "FB_ExceptionGenerator_TcCOM_InitStruct" "__SetnTaskPort", CFbTcComExceptionGenerator::_SetnTaskPort)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "GETNTASKSORTORDER", "FB_ExceptionGenerator_TcCOM_InitStruct" "__GetnTaskSortOrder", CFbTcComExceptionGenerator::_GetnTaskSortOrder)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "SETNTASKSORTORDER", "FB_ExceptionGenerator_TcCOM_InitStruct" "__SetnTaskSortOrder", CFbTcComExceptionGenerator::_SetnTaskSortOrder)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "GETETRACELEVELMAX", "FB_ExceptionGenerator_TcCOM_InitStruct" "__GeteTraceLevelMax", CFbTcComExceptionGenerator::_GeteTraceLevelMax)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "SETETRACELEVELMAX", "FB_ExceptionGenerator_TcCOM_InitStruct" "__SeteTraceLevelMax", CFbTcComExceptionGenerator::_SeteTraceLevelMax)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "GETEMODULECALLER", "FB_ExceptionGenerator_TcCOM_InitStruct" "__GeteModuleCaller", CFbTcComExceptionGenerator::_GeteModuleCaller)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "SETEMODULECALLER", "FB_ExceptionGenerator_TcCOM_InitStruct" "__SeteModuleCaller", CFbTcComExceptionGenerator::_SeteModuleCaller)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "GETECALLERVERIFICATION", "FB_ExceptionGenerator_TcCOM_InitStruct" "__GeteCallerVerification", CFbTcComExceptionGenerator::_GeteCallerVerification)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "SETECALLERVERIFICATION", "FB_ExceptionGenerator_TcCOM_InitStruct" "__SeteCallerVerification", CFbTcComExceptionGenerator::_SeteCallerVerification)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "GETESTEPSIZEADAPTATION", "FB_ExceptionGenerator_TcCOM_InitStruct" "__GeteStepSizeAdaptation", CFbTcComExceptionGenerator::_GeteStepSizeAdaptation)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "SETESTEPSIZEADAPTATION", "FB_ExceptionGenerator_TcCOM_InitStruct" "__SeteStepSizeAdaptation", CFbTcComExceptionGenerator::_SeteStepSizeAdaptation)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "GETEEXECUTIONSEQUENCE", "FB_ExceptionGenerator_TcCOM_InitStruct" "__GeteExecutionSequence", CFbTcComExceptionGenerator::_GeteExecutionSequence)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "SETEEXECUTIONSEQUENCE", "FB_ExceptionGenerator_TcCOM_InitStruct" "__SeteExecutionSequence", CFbTcComExceptionGenerator::_SeteExecutionSequence)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "GETBEXECUTE", "FB_ExceptionGenerator_TcCOM_InitStruct" "__GetbExecute", CFbTcComExceptionGenerator::_GetbExecute)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "SETBEXECUTE", "FB_ExceptionGenerator_TcCOM_InitStruct" "__SetbExecute", CFbTcComExceptionGenerator::_SetbExecute)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "GETEACCESSLOCKSTATE", "FB_ExceptionGenerator_TcCOM_InitStruct" "__GeteAccessLockState", CFbTcComExceptionGenerator::_GeteAccessLockState)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "SETEACCESSLOCKSTATE", "FB_ExceptionGenerator_TcCOM_InitStruct" "__SeteAccessLockState", CFbTcComExceptionGenerator::_SeteAccessLockState)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "GETEINITEXCEPTIONHANDLING", "FB_ExceptionGenerator_TcCOM_InitStruct" "__GeteInitExceptionHandling", CFbTcComExceptionGenerator::_GeteInitExceptionHandling)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "SETEINITEXCEPTIONHANDLING", "FB_ExceptionGenerator_TcCOM_InitStruct" "__SeteInitExceptionHandling", CFbTcComExceptionGenerator::_SeteInitExceptionHandling)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "GETEUPDATEEXCEPTIONHANDLING", "FB_ExceptionGenerator_TcCOM_InitStruct" "__GeteUpdateExceptionHandling", CFbTcComExceptionGenerator::_GeteUpdateExceptionHandling)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "SETEUPDATEEXCEPTIONHANDLING", "FB_ExceptionGenerator_TcCOM_InitStruct" "__SeteUpdateExceptionHandling", CFbTcComExceptionGenerator::_SeteUpdateExceptionHandling)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "GETSTMODULEBUILDINFO", "FB_ExceptionGenerator_TcCOM_InitStruct" "__GetstModuleBuildInfo", CFbTcComExceptionGenerator::_GetstModuleBuildInfo)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "SETSTMODULEBUILDINFO", "FB_ExceptionGenerator_TcCOM_InitStruct" "__SetstModuleBuildInfo", CFbTcComExceptionGenerator::_SetstModuleBuildInfo)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "GETBINITIALIZED", "FB_ExceptionGenerator_TcCOM_InitStruct" "__GetbInitialized", CFbTcComExceptionGenerator::_GetbInitialized)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "SETBINITIALIZED", "FB_ExceptionGenerator_TcCOM_InitStruct" "__SetbInitialized", CFbTcComExceptionGenerator::_SetbInitialized)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "GETSTINITEXCEPTIONINFO", "FB_ExceptionGenerator_TcCOM_InitStruct" "__GetstInitExceptionInfo", CFbTcComExceptionGenerator::_GetstInitExceptionInfo)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "SETSTINITEXCEPTIONINFO", "FB_ExceptionGenerator_TcCOM_InitStruct" "__SetstInitExceptionInfo", CFbTcComExceptionGenerator::_SetstInitExceptionInfo)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "GETNCYCLECOUNT", "FB_ExceptionGenerator_TcCOM_InitStruct" "__GetnCycleCount", CFbTcComExceptionGenerator::_GetnCycleCount)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "SETNCYCLECOUNT", "FB_ExceptionGenerator_TcCOM_InitStruct" "__SetnCycleCount", CFbTcComExceptionGenerator::_SetnCycleCount)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "GETNEXCEPTIONCOUNT", "FB_ExceptionGenerator_TcCOM_InitStruct" "__GetnExceptionCount", CFbTcComExceptionGenerator::_GetnExceptionCount)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "SETNEXCEPTIONCOUNT", "FB_ExceptionGenerator_TcCOM_InitStruct" "__SetnExceptionCount", CFbTcComExceptionGenerator::_SetnExceptionCount)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "GETSTEXECEPTIONINFO", "FB_ExceptionGenerator_TcCOM_InitStruct" "__GetstExeceptionInfo", CFbTcComExceptionGenerator::_GetstExeceptionInfo)
FUNC_METHOD_ENTRY_LIB(VID_ExceptionGenerator,CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT , "SETSTEXECEPTIONINFO", "FB_ExceptionGenerator_TcCOM_InitStruct" "__SetstExeceptionInfo", CFbTcComExceptionGenerator::_SetstExeceptionInfo)

END_FUNC_MAP_FB()

DECLARE_FUNCMAP_CREATOR(HandleFuncMap_CFbTcComExceptionGenerator)
{
	return CFbTcComExceptionGenerator::TcHandleFuncMap(mode, idx, idxcounter, pFncId, pipFnc, ppMethod, ppName, pSignature, pVersion);
}
