
// ****************** FbTcComExceptionGenerator.h *************************
// Generated by TE140x-TargetForMatlabSimulink  2.3.1.1
// MATLAB 9.10.0.1710957 (R2021a) Update 4 (win64)
// TwinCAT 3.1.4024.0
// TwinCAT Target 2.3.1.1
// Beckhoff Automation GmbH & Co. KG     (www.beckhoff.com)
// *************************************************************
#ifndef _FbTcComExceptionGenerator__h_INCLUDED
#define _FbTcComExceptionGenerator__h_INCLUDED


#include "TcGeneratedPou.h"
#include "TcMatSimPou.h"

#include "ExceptionGeneratorInterfaces.h"
#include "ExceptionGeneratorVersion.h"
#include "ExceptionGeneratorDuts.h"


class CFbTcComExceptionGenerator :
	public TcMatSim::GeneratedPou
{
public:

	inline void operator()() {this->FB_Main();}
	inline GUID get_VersionID() {return VID_ExceptionGenerator;}
	inline CLSID get_ClassID() {return CID_FB_EXCEPTIONGENERATOR_TCCOM_INITSTRUCT;}

	DECLARE_FUNC_MAP_FB()

	bool GetImagePointer();
	bool ReleaseImagePointer();
	bool GetObjectInterfaces();
	CFbTcComExceptionGenerator();
	~CFbTcComExceptionGenerator();
	bool FB_init(bool bInitRetains, bool bInCopyCode, ST_FB_ExceptionGenerator_TcCOM_InitStruct stInit);
	static void _FB_init(ST_FB_init_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	bool FB_afterinit();
	static void _FB_AfterInit(ST_FB_afterinit_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	bool Reinit(ST_FB_ExceptionGenerator_TcCOM_InitStruct stReInit);
	static void _Reinit(ST_Reinit_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	bool FB_Main();
	static void _FB_Main(ST_FB_Main_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	bool FB_exit(bool bInCopyCode);
	static void _FB_exit(ST_FB_exit_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	ULONG GetnTaskOid();
	static void _GetnTaskOid(ST_GetnTaskOid_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	void SetnTaskOid(ULONG nParam);
	static void _SetnTaskOid(ST_SetnTaskOid_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	TCOM_STATE GetnObjectState();
	static void _GetnObjectState(ST_GetnObjectState_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	void SetnObjectState(TCOM_STATE eParam);
	static void _SetnObjectState(ST_SetnObjectState_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	ITcADI* GetipADI();
	static void _GetipADI(ST_GetipADI_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	void SetipADI(ITcADI* ipParam);
	static void _SetipADI(ST_SetipADI_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	ITComObject* GetipTcComObject();
	static void _GetipTcComObject(ST_GetipTcComObject_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	void SetipTcComObject(ITComObject* ipParam);
	static void _SetipTcComObject(ST_SetipTcComObject_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	ULONG GetnTaskPriority();
	static void _GetnTaskPriority(ST_GetnTaskPriority_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	void SetnTaskPriority(ULONG nParam);
	static void _SetnTaskPriority(ST_SetnTaskPriority_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	ULONG GetnTaskCycleTimeNs();
	static void _GetnTaskCycleTimeNs(ST_GetnTaskCycleTimeNs_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	void SetnTaskCycleTimeNs(ULONG nParam);
	static void _SetnTaskCycleTimeNs(ST_SetnTaskCycleTimeNs_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	USHORT GetnTaskPort();
	static void _GetnTaskPort(ST_GetnTaskPort_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	void SetnTaskPort(USHORT nParam);
	static void _SetnTaskPort(ST_SetnTaskPort_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	ULONG GetnTaskSortOrder();
	static void _GetnTaskSortOrder(ST_GetnTaskSortOrder_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	void SetnTaskSortOrder(ULONG nParam);
	static void _SetnTaskSortOrder(ST_SetnTaskSortOrder_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	TcTraceLevel GeteTraceLevelMax();
	static void _GeteTraceLevelMax(ST_GeteTraceLevelMax_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	void SeteTraceLevelMax(TcTraceLevel eParam);
	static void _SeteTraceLevelMax(ST_SeteTraceLevelMax_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	TcMgSdk::ModuleCaller GeteModuleCaller();
	static void _GeteModuleCaller(ST_GeteModuleCaller_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	void SeteModuleCaller(TcMgSdk::ModuleCaller eParam);
	static void _SeteModuleCaller(ST_SeteModuleCaller_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	TcMgSdk::CallerVerification GeteCallerVerification();
	static void _GeteCallerVerification(ST_GeteCallerVerification_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	void SeteCallerVerification(TcMgSdk::CallerVerification eParam);
	static void _SeteCallerVerification(ST_SeteCallerVerification_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	TcMgSdk::StepSizeAdaptation GeteStepSizeAdaptation();
	static void _GeteStepSizeAdaptation(ST_GeteStepSizeAdaptation_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	void SeteStepSizeAdaptation(TcMgSdk::StepSizeAdaptation eParam);
	static void _SeteStepSizeAdaptation(ST_SeteStepSizeAdaptation_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	TcMgSdk::ExecutionSequence1 GeteExecutionSequence();
	static void _GeteExecutionSequence(ST_GeteExecutionSequence_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	void SeteExecutionSequence(TcMgSdk::ExecutionSequence1 eParam);
	static void _SeteExecutionSequence(ST_SeteExecutionSequence_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	bool GetbExecute();
	static void _GetbExecute(ST_GetbExecute_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	void SetbExecute(bool bParam);
	static void _SetbExecute(ST_SetbExecute_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	TCOM_STATE GeteAccessLockState();
	static void _GeteAccessLockState(ST_GeteAccessLockState_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	void SeteAccessLockState(TCOM_STATE eParam);
	static void _SeteAccessLockState(ST_SeteAccessLockState_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	TcMgSdk::FpExcptCtrlSet GeteInitExceptionHandling();
	static void _GeteInitExceptionHandling(ST_GeteInitExceptionHandling_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	void SeteInitExceptionHandling(TcMgSdk::FpExcptCtrlSet eParam);
	static void _SeteInitExceptionHandling(ST_SeteInitExceptionHandling_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	TcMgSdk::FpExcptCtrlSet GeteUpdateExceptionHandling();
	static void _GeteUpdateExceptionHandling(ST_GeteUpdateExceptionHandling_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	void SeteUpdateExceptionHandling(TcMgSdk::FpExcptCtrlSet eParam);
	static void _SeteUpdateExceptionHandling(ST_SeteUpdateExceptionHandling_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	TcMgSdk::ModuleBuildInfo GetstModuleBuildInfo();
	static void _GetstModuleBuildInfo(ST_GetstModuleBuildInfo_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	void SetstModuleBuildInfo(TcMgSdk::ModuleBuildInfo stParam);
	static void _SetstModuleBuildInfo(ST_SetstModuleBuildInfo_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	bool GetbInitialized();
	static void _GetbInitialized(ST_GetbInitialized_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	void SetbInitialized(bool bParam);
	static void _SetbInitialized(ST_SetbInitialized_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	TcMgSdk::ExceptionInfo GetstInitExceptionInfo();
	static void _GetstInitExceptionInfo(ST_GetstInitExceptionInfo_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	void SetstInitExceptionInfo(TcMgSdk::ExceptionInfo stParam);
	static void _SetstInitExceptionInfo(ST_SetstInitExceptionInfo_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	ULONGLONG GetnCycleCount();
	static void _GetnCycleCount(ST_GetnCycleCount_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	void SetnCycleCount(ULONGLONG nParam);
	static void _SetnCycleCount(ST_SetnCycleCount_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	ULONGLONG GetnExceptionCount();
	static void _GetnExceptionCount(ST_GetnExceptionCount_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	void SetnExceptionCount(ULONGLONG nParam);
	static void _SetnExceptionCount(ST_SetnExceptionCount_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	TcMgSdk::ExceptionInfo GetstExeceptionInfo();
	static void _GetstExeceptionInfo(ST_GetstExeceptionInfo_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);
	void SetstExeceptionInfo(TcMgSdk::ExceptionInfo stParam);
	static void _SetstExeceptionInfo(ST_SetstExeceptionInfo_FB_ExceptionGenerator_TcCOM_InitStruct* ST_Param);


	ExtU_ExceptionGenerator_T stExceptionGenerator_U;
	ExtY_ExceptionGenerator_T stExceptionGenerator_Y;
	TcMgSdk::ExecutionInfo stExecutionInfo;
	ExtU_ExceptionGenerator_T* pExceptionGenerator_U;
	ExtY_ExceptionGenerator_T* pExceptionGenerator_Y;
	TcMgSdk::ExecutionInfo* pExecutionInfo;
	ITcUnknown* ipITcUnknown;
	ITcPersist* ipITcPersist;
	ITComObject* ipITComObject;
	ITcWatchSource* ipITcWatchSource;
	ITcCyclic* ipITcCyclic;
	ITcPostCyclic* ipITcPostCyclic;
	ITcADI* ipITcADI;
	ST_FB_ExceptionGenerator_TcCOM_InitStruct stInit;

};
TYPESIZE_VALIDATION2(CFbTcComExceptionGenerator,320,376);

			
#endif // _FbTcComExceptionGenerator__h_INCLUDED
			