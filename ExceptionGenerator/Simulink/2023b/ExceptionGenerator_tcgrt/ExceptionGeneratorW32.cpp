// ****************** ExceptionGeneratorW32.cpp *************************
// Generated by TE140x-TargetForMatlabSimulink  2.8.1.0
// MATLAB 23.2.0.2409890 (R2023b) Update 3 (win64)
// TwinCAT 3.1.0.0
// TwinCAT Target 2.8.1.0
// Beckhoff Automation GmbH & Co. KG     (www.beckhoff.com)
// *************************************************************
#include "TcPch.h"
#pragma hdrstop

#include "ExceptionGeneratorCtrl.h"
#include "TcSysW32_i.c"

CComModule _Module;

const   CLSID   IID_ExceptionGeneratorCtrl		=  {0xE2E415A3, 0xB00E, 0x4CB0, {0x82, 0xB1, 0xCB, 0x87, 0xA8, 0x69, 0x18, 0x97}};
const   CLSID   LIBID_ExceptionGeneratorW32Lib	=  {0x37020EAA, 0x329F, 0x4528, {0x94, 0x4B, 0x92, 0x0F, 0xF7, 0x67, 0xBA, 0x23}};
const   CLSID   CLSID_ExceptionGeneratorCtrl   =  {0xB647137C, 0x6D23, 0x4BD1, {0x8B, 0x46, 0x2E, 0x44, 0x0E, 0xB7, 0x76, 0x28}};

BEGIN_OBJECT_MAP(ObjectMap)
OBJECT_ENTRY(CLSID_ExceptionGeneratorCtrl, CExceptionGeneratorCtrl)
END_OBJECT_MAP()

/////////////////////////////////////////////////////////////////////////////
// DLL Entry Point

extern "C"
BOOL WINAPI DllMain(HANDLE hInstance, DWORD dwReason, LPVOID /*lpReserved*/)
{
	if (dwReason == DLL_PROCESS_ATTACH)
	{
		_Module.Init(ObjectMap, (HINSTANCE)hInstance);
#ifndef UNDER_CE
		DisableThreadLibraryCalls((HINSTANCE)hInstance);
#endif
	}
	else if (dwReason == DLL_PROCESS_DETACH)
		_Module.Term();
	return TRUE;    // ok
}

/////////////////////////////////////////////////////////////////////////////
// Used to determine whether the DLL can be unloaded by OLE

STDAPI DllCanUnloadNow(void)
{
	return (_Module.GetLockCount()==0) ? S_OK : S_FALSE;
}

/////////////////////////////////////////////////////////////////////////////
// Returns a class factory to create an object of the requested type

STDAPI DllGetClassObject(REFCLSID rclsid, REFIID riid, LPVOID* ppv)
{
	return _Module.GetClassObject(rclsid, riid, ppv);
}

/////////////////////////////////////////////////////////////////////////////
// DllRegisterServer - Adds entries to the system registry

STDAPI DllRegisterServer(void)
{
	// registers object, typelib and all interfaces in typelib
	return _Module.RegisterServer(TRUE);
}

/////////////////////////////////////////////////////////////////////////////
// DllUnregisterServer - Removes entries from the system registry

STDAPI DllUnregisterServer(void)
{
	_Module.UnregisterServer();
	return S_OK;
}

/////////////////////////////////////////////////////////////////////////////
STDAPI DllGetTcCtrl(ITcCtrl** ppCtrl)
{
	if ( ppCtrl == NULL )
		return E_POINTER;

	CComObject<CExceptionGeneratorCtrl>* pCExceptionGeneratorCtrl = new CComObject<CExceptionGeneratorCtrl>();
	if (pCExceptionGeneratorCtrl == NULL) return E_POINTER;
	return pCExceptionGeneratorCtrl->QueryInterface(IID_ITcCtrl, reinterpret_cast<void**>(ppCtrl));
}
